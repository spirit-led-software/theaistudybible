name: Production Deployment
concurrency: prod
on:
  push:
    branches: [master]
    paths-ignore:
      - '.github/**'
      - '.devcontainer/**'
      - '.vscode/**'
      - '.gitignore'
      - 'README.md'
      - 'mobile/**'
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

  LANGCHAIN_API_KEY: ${{ secrets.LANGCHAIN_API_KEY }}

  NEON_API_KEY: ${{ secrets.NEON_API_KEY }}

  UNSTRUCTURED_API_KEY: ${{ secrets.UNSTRUCTURED_API_KEY }}

  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

  REVENUECAT_PROJECT_ID: ${{ vars.REVENUECAT_PROJECT_ID }}
  REVENUECAT_API_KEY: ${{ secrets.REVENUECAT_API_KEY }}
  REVENUECAT_WEBHOOK_SECRET: ${{ secrets.REVENUECAT_WEBHOOK_SECRET }}
  REVENUECAT_STRIPE_API_KEY: ${{ secrets.REVENUECAT_STRIPE_API_KEY }}

  ENCODED_APPLE_AUTH_KEY: ${{ secrets.ENCODED_APPLE_AUTH_KEY }}
  APPLE_CLIENT_ID: ${{ vars.APPLE_CLIENT_ID }}
  APPLE_KEY_ID: ${{ vars.APPLE_KEY_ID }}
  APPLE_TEAM_ID: ${{ vars.APPLE_TEAM_ID }}

  GOOGLE_CLIENT_ID: ${{ vars.GOOGLE_CLIENT_ID }}

  EMAIL_FROM: ${{ vars.EMAIL_FROM }}
  EMAIL_REPLY_TO: ${{ vars.EMAIL_REPLY_TO }}
  EMAIL_SERVER_HOST: ${{ vars.EMAIL_SERVER_HOST }}
  EMAIL_SERVER_PORT: ${{ vars.EMAIL_SERVER_PORT }}
  EMAIL_SERVER_USERNAME: ${{ vars.EMAIL_SERVER_USERNAME }}
  EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}

  ADMIN_EMAIL: ${{ vars.ADMIN_EMAIL }}
  ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}

  STRIPE_PUBLIC_KEY: ${{ vars.STRIPE_PUBLIC_KEY }}
  STRIPE_API_KEY: ${{ secrets.STRIPE_API_KEY }}
  STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}

  UPSTASH_EMAIL: ${{ vars.UPSTASH_EMAIL }}
  UPSTASH_API_KEY: ${{ secrets.UPSTASH_API_KEY }}

  AXIOM_TOKEN: ${{ secrets.AXIOM_TOKEN }}
  AXIOM_DATASET: ${{ vars.AXIOM_DATASET }}

  ENCODED_FIREBASE_JSON: ${{ secrets.ENCODED_FIREBASE_JSON }}

jobs:
  deploy:
    name: Deploy Prod
    runs-on: ubuntu-latest
    steps:
      - id: checkout
        name: Checkout
        uses: actions/checkout@v3
      - name: Install bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install
      - id: setup_firebase_creds
        name: Setup Firebase Credentials
        run: |
          echo $ENCODED_FIREBASE_JSON | base64 --decode > firebase-service-account.json
      - id: setup_apple_auth_key
        name: Setup Apple Auth Key
        run: |
          echo $ENCODED_APPLE_AUTH_KEY | base64 --decode > apple-auth-key.p8
      - name: Run Codegen
        run: bun run codegen
      - name: Rename website & auth UI .env file so svelte-kit can find it during build
        run: |
          mv packages/website/.env.example packages/website/.env
          mv packages/auth-ui/.env.example packages/auth-ui/.env
      - name: Build SST
        run: bun sst build --stage prod --to .sst/dist/
      - name: Typecheck workspace
        run: bun run typecheck:all
      - name: Lint workspace
        run: bun run lint
      - name: Remove website & auth UI .env file so it doesn't get picked up by the deploy
        run: rm packages/{website,auth-ui}/.env
      - id: sst_deploy
        name: Deploy to AWS
        run: bun sst deploy --stage prod --from .sst/dist/
