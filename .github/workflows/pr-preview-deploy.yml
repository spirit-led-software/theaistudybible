name: Deploy PR Preview

on:
  pull_request:
    branches: [master]
    paths-ignore:
      - 'README.md'
      - '.vscode'
      - '.cursorrules'
      - '.github'

concurrency: pr-${{ github.event.pull_request.number }}

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  FLY_ORG: ${{ vars.FLY_ORG }}
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  TURSO_ORG: ${{ vars.TURSO_ORG }}
  TURSO_API_TOKEN: ${{ secrets.TURSO_API_KEY }}
  UPSTASH_EMAIL: ${{ vars.UPSTASH_EMAIL }}
  UPSTASH_API_KEY: ${{ secrets.UPSTASH_API_KEY }}
  STRIPE_API_KEY: ${{ secrets.DEV_STRIPE_SECRET_KEY }}
  SENTRY_ORG: ${{ vars.SENTRY_ORG }}
  SENTRY_TEAM: ${{ vars.SENTRY_TEAM }}
  SENTRY_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: CI Setup
        uses: ./.github/actions/ci-setup

      - name: Install JQ
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      
      - name: Set SST Stage
        run: |
          echo "pr-${{ github.event.pull_request.number }}" > .sst/stage

      - name: Type check
        run: |
          bun run type-check

      - name: Lint
        run: |
          bun run lint

      - name: Test
        run: |
          bun run test

      - name: Deploy
        run: |
          bun run deploy

      - name: Run DB migrations
        run: |
          bun run db:migrate

      - name: Seed DB
        run: |
          bun run db:seed

      - name: Run E2E tests
        run: |
          bun run test:e2e

      - id: extract_website_url
        name: Extract website URL
        run: |
          sst_output_file=.sst/outputs.json
          sst_outputs=$(cat $sst_output_file)
          echo -e "Outputs from SST in JSON:\n$sst_outputs"
          website_url=$(jq -r '.["Web App URL"]' $sst_output_file)
          echo "website_url=$website_url" >> $GITHUB_OUTPUT

      - id: pr_comment
        name: Add comment to PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            const comment = comments.find((comment) => comment.body.includes('Preview URL:'));
            if (comment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: comment.id,
                body: `Preview URL: ${{ steps.extract_website_url.outputs.website_url }}`,
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: `Preview URL: ${{ steps.extract_website_url.outputs.website_url }}`,
              });
            }

      - name: CI Cleanup
        uses: ./.github/actions/ci-cleanup
