// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Chat {
  id        String        @id @default(uuid())
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  name      String
  messages  ChatMessage[]
}

model ChatMessage {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  text       String
  chat       Chat        @relation(fields: [chatId], references: [id])
  chatId     String
  chatAnswer ChatAnswer?
}

model ChatAnswer {
  id              String                         @id @default(uuid())
  createdAt       DateTime                       @default(now())
  updatedAt       DateTime                       @updatedAt
  text            String
  message         ChatMessage                    @relation(fields: [messageId], references: [id])
  messageId       String                         @unique
  sourceDocuments ChatAnswersOnSourceDocuments[]
}

model SourceDocument {
  id        String                         @id @default(uuid())
  createdAt DateTime                       @default(now())
  updatedAt DateTime                       @updatedAt
  name      String
  text      String
  answers   ChatAnswersOnSourceDocuments[]
  devos     DevosOnSourceDocuments[]
}

model ChatAnswersOnSourceDocuments {
  answer           ChatAnswer     @relation(fields: [answerId], references: [id])
  answerId         String
  sourceDocument   SourceDocument @relation(fields: [sourceDocumentId], references: [id])
  sourceDocumentId String

  @@id([answerId, sourceDocumentId])
}

model Devo {
  id              String                   @id @default(uuid())
  createdAt       DateTime                 @default(now())
  updatedAt       DateTime                 @updatedAt
  subject         String
  content         String
  sourceDocuments DevosOnSourceDocuments[]
}

model DevosOnSourceDocuments {
  devo             Devo           @relation(fields: [devoId], references: [id])
  devoId           String
  sourceDocument   SourceDocument @relation(fields: [sourceDocumentId], references: [id])
  sourceDocumentId String

  @@id([devoId, sourceDocumentId])
}

model IndexOperation {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  type      String
  status    String
  metadata  Json
}
